% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trajectory_inference.R
\name{reverse.trajectory}
\alias{reverse.trajectory}
\title{Reverse a trajectory}
\usage{
reverse.trajectory(trajectory)
}
\arguments{
\item{trajectory}{A trajectory as returned by \code{\link{infer.trajectory}}.}
}
\value{
The same trajectory, but in the other direction.
}
\description{
Since the direction of the trajectory is not specified, the ordering of a trajectory may be inverted using \code{reverse.trajectory}.
}
\details{
#' @title Infer a guided trajectory
#'
#' @description \code{infer.guided.trajectory} infers multiple
#' trajectories and uses the original space with the combined trajectory orderings
#' to infer a guided trajectory.
#'
#' @usage
#' infer.guided.trajectory(space, number = 10, ...)
#'
#' @param space A numeric matrix or data frame containing the coordinates of samples.
#' @param number The number of trajectories to infer
#' @param ... Parameters for \code{\link{infer.trajectory}}
#'
#' @return A list containing several objects:
#' \itemize{
#'   \item \code{path}: NULL
#'   \item \code{time}: the time point of each sample along the inferred trajectory.
#' }
#'
#' @seealso \code{\link{infer.trajectory}}, \code{\link{reduce.dimensionality}}, \code{\link{draw.trajectory.plot}}
#'
#' @importFrom stats cor
#'
#' @export
infer.guided.trajectory <- function(space, number = 10, ...) {
  requireNamespace("stats")

times <- sapply(seq_len(number), function(zzz) {
    infer.trajectory(space, ...)$time
  })

for (i in seq_len(number)) {
    if (stats::cor(times[,1], times[,i]) < 0) {
      times[,i] <- 1 - times[,i]
    }
  }

space.times <- cbind(space, times)
  SCORPIUS::infer.trajectory(space.times)
}

#' @title Average orderings of multiple trajectories
#'
#' @description \code{infer.consensus.trajectory} infers multiple
#' trajectories with the \code{\link{infer.trajectory}} method, and aligns
#' and averages the orderings.
#'
#' @usage
#' infer.consensus.trajectory(space, number = 10, ...)
#'
#' @param space A numeric matrix or data frame containing the coordinates of samples.
#' @param number The number of trajectories to infer
#' @param ... Parameters for \code{\link{infer.trajectory}}
#'
#' @return A list containing several objects:
#' \itemize{
#'   \item \code{path}: NULL
#'   \item \code{time}: the time point of each sample along the inferred trajectory.
#' }
#'
#' @seealso \code{\link{infer.trajectory}}, \code{\link{reduce.dimensionality}}, \code{\link{draw.trajectory.plot}}
#'
#' @importFrom stats cor
#'
#' @export
infer.consensus.trajectory <- function(space, number = 10, ...) {
  requireNamespace("stats")

times <- sapply(seq_len(number), function(zzz) {
    infer.trajectory(space, ...)$time
  })

for (i in seq_len(number)) {
    if (stats::cor(times[,1], times[,i]) < 0) {
      times[,i] <- 1 - times[,i]
    }
  }

time <- rowMeans(times)
  path <- space[order(time),,drop=F]

# output result
  trajectory <- list(
    path = path,
    time = time
  )
  class(trajectory) <- "SCORPIUS::trajectory"
  trajectory
}
}
\examples{
## Generate an example dataset and infer a trajectory through it
dataset <- generate.dataset(type="poly", num.genes=500, num.samples=1000, num.groups=4)
group.name <- dataset$sample.info$group.name
dist <- correlation.distance(dataset$expression)
space <- reduce.dimensionality(dist, ndim=2)
traj <- infer.trajectory(space)

## Visualise the trajectory
draw.trajectory.plot(space, group.name, path=traj$path)

## Reverse the trajectory
reverse.traj <- reverse.trajectory(traj)
draw.trajectory.plot(space, group.name, path=reverse.traj$path)

## It's the same but reversed?!
plot(traj$time, reverse.traj$time, type="l")
}
\seealso{
\code{\link{infer.trajectory}}
}
